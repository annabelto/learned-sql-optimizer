
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=13701.41..13701.43 rows=7 width=68)
   ->  Sort  (cost=13701.41..13701.43 rows=7 width=68)
         Sort Key: tmp1.i_manager_id, tmp1.avg_monthly_sales, tmp1.sum_sales
         ->  Subquery Scan on tmp1  (cost=13698.58..13701.32 rows=7 width=68)
               Filter: (CASE WHEN (tmp1.avg_monthly_sales > '0'::numeric) THEN (abs((tmp1.sum_sales - tmp1.avg_monthly_sales)) / tmp1.avg_monthly_sales) ELSE NULL::numeric END > 0.1)
               ->  WindowAgg  (cost=13698.58..13700.87 rows=20 width=72)
                     ->  Finalize GroupAggregate  (cost=13698.58..13700.57 rows=20 width=40)
                           Group Key: item.i_manager_id, date_dim.d_moy
                           ->  Gather Merge  (cost=13698.58..13700.20 rows=12 width=40)
                                 Workers Planned: 1
                                 ->  Partial GroupAggregate  (cost=12698.57..12698.84 rows=12 width=40)
                                       Group Key: item.i_manager_id, date_dim.d_moy
                                       ->  Sort  (cost=12698.57..12698.60 rows=12 width=14)
                                             Sort Key: item.i_manager_id, date_dim.d_moy
                                             ->  Nested Loop  (cost=31.57..12698.35 rows=12 width=14)
                                                   ->  Hash Join  (cost=31.42..12697.08 rows=12 width=18)
                                                         Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                         ->  Nested Loop  (cost=5.79..12664.28 rows=2730 width=18)
                                                               ->  Parallel Seq Scan on item  (cost=0.00..1627.06 rows=17 width=8)
                                                                     Filter: (((i_category = ANY ('{Books,Children,Electronics}'::bpchar[])) AND (i_class = ANY ('{personal,portable,reference,self-help}'::bpchar[])) AND (i_brand = ANY ('{"scholaramalgamalg #14","scholaramalgamalg #7","exportiunivamalg #9","scholaramalgamalg #9"}'::bpchar[]))) OR ((i_category = ANY ('{Women,Music,Men}'::bpchar[])) AND (i_class = ANY ('{accessories,classical,fragrances,pants}'::bpchar[])) AND (i_brand = ANY ('{"amalgimporto #1","edu packscholar #1","exportiimporto #1","importoamalg #1"}'::bpchar[]))))
                                                               ->  Bitmap Heap Scan on store_sales  (cost=5.79..647.50 rows=175 width=18)
                                                                     Recheck Cond: (ss_item_sk = item.i_item_sk)
                                                                     ->  Bitmap Index Scan on store_sales_pkey  (cost=0.00..5.74 rows=175 width=0)
                                                                           Index Cond: (ss_item_sk = item.i_item_sk)
                                                         ->  Hash  (cost=21.27..21.27 rows=349 width=8)
                                                               ->  Index Scan using idx_date_dim_month_seq on date_dim  (cost=0.29..21.27 rows=349 width=8)
                                                                     Index Cond: ((d_month_seq >= 1222) AND (d_month_seq <= 1233))
                                                   ->  Memoize  (cost=0.15..0.16 rows=1 width=4)
                                                         Cache Key: store_sales.ss_store_sk
                                                         Cache Mode: logical
                                                         ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)
                                                               Index Cond: (s_store_sk = store_sales.ss_store_sk)
(32 rows)

 i_manager_id | sum_sales |   avg_monthly_sales   
--------------+-----------+-----------------------
            1 |    552.07 | 1254.4650000000000000
            1 |    943.47 | 1254.4650000000000000
            1 |    958.53 | 1254.4650000000000000
            1 |    970.63 | 1254.4650000000000000
            1 |   1018.84 | 1254.4650000000000000
            1 |   1052.14 | 1254.4650000000000000
            1 |   1693.21 | 1254.4650000000000000
            1 |   1869.05 | 1254.4650000000000000
            1 |   2187.41 | 1254.4650000000000000
            2 |    316.87 |  902.3470000000000000
            2 |    410.81 |  902.3470000000000000
            2 |    488.76 |  902.3470000000000000
            2 |    644.69 |  902.3470000000000000
            2 |    732.91 |  902.3470000000000000
            2 |    776.20 |  902.3470000000000000
            2 |   1201.07 |  902.3470000000000000
            2 |   1560.68 |  902.3470000000000000
            2 |   2072.76 |  902.3470000000000000
            3 |    592.83 | 1350.9150000000000000
            3 |    649.81 | 1350.9150000000000000
            3 |    886.21 | 1350.9150000000000000
            3 |   1135.72 | 1350.9150000000000000
            3 |   1204.89 | 1350.9150000000000000
            3 |   1969.05 | 1350.9150000000000000
            3 |   2092.12 | 1350.9150000000000000
            3 |   2345.78 | 1350.9150000000000000
            4 |    976.21 | 1440.3820000000000000
            4 |   1026.64 | 1440.3820000000000000
            4 |   1034.93 | 1440.3820000000000000
            4 |   1105.47 | 1440.3820000000000000
            4 |   1224.91 | 1440.3820000000000000
            4 |   1692.37 | 1440.3820000000000000
            4 |   1694.70 | 1440.3820000000000000
            4 |   1794.80 | 1440.3820000000000000
            4 |   2544.13 | 1440.3820000000000000
            5 |    516.43 |  946.2850000000000000
            5 |    531.27 |  946.2850000000000000
            5 |    537.89 |  946.2850000000000000
            5 |    608.77 |  946.2850000000000000
            5 |    753.65 |  946.2850000000000000
            5 |   1473.79 |  946.2850000000000000
            5 |   1545.42 |  946.2850000000000000
            5 |   1634.46 |  946.2850000000000000
            6 |    653.03 | 1302.8290000000000000
            6 |    738.99 | 1302.8290000000000000
            6 |    850.60 | 1302.8290000000000000
            6 |    916.95 | 1302.8290000000000000
            6 |    983.99 | 1302.8290000000000000
            6 |   1567.77 | 1302.8290000000000000
            6 |   1699.20 | 1302.8290000000000000
            6 |   2178.66 | 1302.8290000000000000
            6 |   2222.38 | 1302.8290000000000000
            7 |    553.61 | 1178.0290000000000000
            7 |    718.89 | 1178.0290000000000000
            7 |    726.64 | 1178.0290000000000000
            7 |    735.20 | 1178.0290000000000000
            7 |    892.46 | 1178.0290000000000000
            7 |   1049.16 | 1178.0290000000000000
            7 |   1605.94 | 1178.0290000000000000
            7 |   1904.01 | 1178.0290000000000000
            7 |   2383.71 | 1178.0290000000000000
            8 |     81.98 |  477.0850000000000000
            8 |    183.33 |  477.0850000000000000
            8 |    210.05 |  477.0850000000000000
            8 |    282.77 |  477.0850000000000000
            8 |    427.07 |  477.0850000000000000
            8 |    616.64 |  477.0850000000000000
            8 |    946.15 |  477.0850000000000000
            8 |   1020.46 |  477.0850000000000000
            9 |    718.96 | 1324.7200000000000000
            9 |    722.10 | 1324.7200000000000000
            9 |    877.15 | 1324.7200000000000000
            9 |    935.52 | 1324.7200000000000000
            9 |   1008.49 | 1324.7200000000000000
            9 |   1061.95 | 1324.7200000000000000
            9 |   1668.34 | 1324.7200000000000000
            9 |   2173.43 | 1324.7200000000000000
            9 |   2840.31 | 1324.7200000000000000
           10 |    145.67 |  701.8091666666666667
           10 |    198.91 |  701.8091666666666667
           10 |    438.02 |  701.8091666666666667
           10 |    439.43 |  701.8091666666666667
           10 |    548.95 |  701.8091666666666667
           10 |    777.94 |  701.8091666666666667
           10 |    909.60 |  701.8091666666666667
           10 |   1344.58 |  701.8091666666666667
           10 |   1515.07 |  701.8091666666666667
           11 |    173.85 |  480.9030000000000000
           11 |    252.47 |  480.9030000000000000
           11 |    328.32 |  480.9030000000000000
           11 |    352.73 |  480.9030000000000000
           11 |    380.50 |  480.9030000000000000
           11 |    582.69 |  480.9030000000000000
           11 |    732.16 |  480.9030000000000000
           11 |    744.46 |  480.9030000000000000
           11 |    753.86 |  480.9030000000000000
           12 |    515.93 | 1085.2770000000000000
           12 |    546.47 | 1085.2770000000000000
           12 |    701.94 | 1085.2770000000000000
           12 |    704.46 | 1085.2770000000000000
(100 rows)

