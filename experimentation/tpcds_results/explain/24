                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=75564.54..75564.57 rows=1 width=358)
   Group Key: ssales.c_last_name, ssales.c_first_name, ssales.s_store_name
   Filter: (sum(ssales.netpaid) > $5)
   CTE ssales
     ->  GroupAggregate  (cost=75564.43..75564.47 rows=1 width=158)
           Group Key: customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size
           ->  Sort  (cost=75564.43..75564.43 rows=1 width=132)
                 Sort Key: customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size
                 ->  Nested Loop  (cost=6915.71..75564.42 rows=1 width=132)
                       ->  Gather  (cost=6915.42..75564.11 rows=1 width=77)
                             Workers Planned: 2
                             ->  Nested Loop  (cost=5915.42..74564.01 rows=1 width=77)
                                   ->  Parallel Hash Join  (cost=5915.00..74553.35 rows=24 width=77)
                                         Hash Cond: ((customer.c_current_addr_sk = customer_address.ca_address_sk) AND (store.s_zip = customer_address.ca_zip))
                                         Join Filter: ((customer.c_birth_country)::text <> upper((customer_address.ca_country)::text))
                                         ->  Parallel Hash Join  (cost=4092.70..72253.01 rows=91057 width=98)
                                               Hash Cond: (store_sales.ss_customer_sk = customer.c_customer_sk)
                                               ->  Hash Join  (cost=1.16..67911.17 rows=95350 width=37)
                                                     Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                     ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=22)
                                                     ->  Hash  (cost=1.15..1.15 rows=1 width=23)
                                                           ->  Seq Scan on store  (cost=0.00..1.15 rows=1 width=23)
                                                                 Filter: (s_market_id = 5)
                                               ->  Parallel Hash  (cost=3356.24..3356.24 rows=58824 width=69)
                                                     ->  Parallel Seq Scan on customer  (cost=0.00..3356.24 rows=58824 width=69)
                                         ->  Parallel Hash  (cost=1381.12..1381.12 rows=29412 width=32)
                                               ->  Parallel Seq Scan on customer_address  (cost=0.00..1381.12 rows=29412 width=32)
                                   ->  Index Only Scan using store_returns_pkey on store_returns  (cost=0.42..0.44 rows=1 width=8)
                                         Index Cond: ((sr_item_sk = store_sales.ss_item_sk) AND (sr_ticket_number = store_sales.ss_ticket_number))
                       ->  Index Scan using item_pkey on item  (cost=0.29..0.31 rows=1 width=67)
                             Index Cond: (i_item_sk = store_sales.ss_item_sk)
   InitPlan 2 (returns $5)
     ->  Aggregate  (cost=0.02..0.04 rows=1 width=32)
           ->  CTE Scan on ssales ssales_1  (cost=0.00..0.02 rows=1 width=32)
   ->  Sort  (cost=0.03..0.04 rows=1 width=358)
         Sort Key: ssales.c_last_name, ssales.c_first_name, ssales.s_store_name
         ->  CTE Scan on ssales  (cost=0.00..0.02 rows=1 width=358)
               Filter: (i_color = 'aquamarine'::bpchar)
(38 rows)

 c_last_name | c_first_name | s_store_name | paid 
-------------+--------------+--------------+------
(0 rows)

