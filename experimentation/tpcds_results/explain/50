                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9419.15..9419.38 rows=1 width=125)
   ->  GroupAggregate  (cost=9419.15..9419.38 rows=1 width=125)
         Group Key: store.s_store_name, store.s_company_id, store.s_street_number, store.s_street_name, store.s_street_type, store.s_suite_number, store.s_city, store.s_county, store.s_state, store.s_zip
         ->  Nested Loop  (cost=9419.15..9419.29 rows=1 width=93)
               ->  Gather Merge  (cost=9418.86..9418.98 rows=1 width=93)
                     Workers Planned: 2
                     ->  Sort  (cost=8418.84..8418.84 rows=1 width=93)
                           Sort Key: store.s_store_name, store.s_company_id, store.s_street_number, store.s_street_name, store.s_street_type, store.s_suite_number, store.s_city, store.s_county, store.s_state, store.s_zip
                           ->  Nested Loop  (cost=2050.34..8418.83 rows=1 width=93)
                                 ->  Nested Loop  (cost=2050.20..8418.67 rows=1 width=12)
                                       ->  Parallel Hash Join  (cost=2049.78..8353.24 rows=49 width=16)
                                             Hash Cond: (store_returns.sr_returned_date_sk = d2.d_date_sk)
                                             ->  Parallel Seq Scan on store_returns  (cost=0.00..5988.98 rows=119798 width=16)
                                             ->  Parallel Hash  (cost=2049.55..2049.55 rows=18 width=4)
                                                   ->  Parallel Seq Scan on date_dim d2  (cost=0.00..2049.55 rows=18 width=4)
                                                         Filter: ((d_year = 2001) AND (d_moy = 8))
                                       ->  Index Scan using store_sales_pkey on store_sales  (cost=0.43..1.33 rows=1 width=20)
                                             Index Cond: ((ss_item_sk = store_returns.sr_item_sk) AND (ss_ticket_number = store_returns.sr_ticket_number))
                                             Filter: (store_returns.sr_customer_sk = ss_customer_sk)
                                 ->  Index Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=89)
                                       Index Cond: (s_store_sk = store_sales.ss_store_sk)
               ->  Index Only Scan using date_dim_pkey on date_dim d1  (cost=0.29..0.31 rows=1 width=4)
                     Index Cond: (d_date_sk = store_sales.ss_sold_date_sk)
(23 rows)

