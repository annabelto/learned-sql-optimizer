                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=143861.03..143863.52 rows=100 width=160)
   ->  GroupAggregate  (cost=143861.03..143863.90 rows=115 width=160)
         Group Key: ('store channel'::text), (('store'::text || (ssr.store_id)::text))
         Group Key: ('store channel'::text)
         Group Key: ()
         ->  Sort  (cost=143861.03..143861.17 rows=57 width=160)
               Sort Key: ('store channel'::text), (('store'::text || (ssr.store_id)::text))
               ->  Append  (cost=70067.11..143859.37 rows=57 width=160)
                     ->  Subquery Scan on ssr  (cost=70067.11..70069.39 rows=6 width=160)
                           ->  Finalize GroupAggregate  (cost=70067.11..70069.30 rows=6 width=113)
                                 Group Key: store.s_store_id
                                 ->  Gather Merge  (cost=70067.11..70068.99 rows=12 width=113)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=69067.08..69067.58 rows=6 width=113)
                                             Group Key: store.s_store_id
                                             ->  Sort  (cost=69067.08..69067.15 rows=26 width=41)
                                                   Sort Key: store.s_store_id
                                                   ->  Nested Loop Left Join  (cost=2051.92..69066.47 rows=26 width=41)
                                                         ->  Nested Loop  (cost=2051.49..69054.76 rows=26 width=37)
                                                               ->  Nested Loop  (cost=2051.35..69050.07 rows=28 width=41)
                                                                     ->  Hash Join  (cost=2051.06..68902.23 rows=478 width=41)
                                                                           Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                                           ->  Parallel Hash Join  (cost=2049.79..68899.20 rows=501 width=28)
                                                                                 Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                                                 ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=32)
                                                                                 ->  Parallel Hash  (cost=2049.55..2049.55 rows=19 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim  (cost=0.00..2049.55 rows=19 width=4)
                                                                                             Filter: ((d_date >= '2002-08-14'::date) AND (d_date <= '2002-09-13'::date))
                                                                           ->  Hash  (cost=1.12..1.12 rows=12 width=21)
                                                                                 ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=21)
                                                                     ->  Index Scan using item_pkey on item  (cost=0.29..0.31 rows=1 width=4)
                                                                           Index Cond: (i_item_sk = store_sales.ss_item_sk)
                                                                           Filter: (i_current_price > '50'::numeric)
                                                               ->  Index Scan using promotion_pkey on promotion  (cost=0.15..0.17 rows=1 width=4)
                                                                     Index Cond: (p_promo_sk = store_sales.ss_promo_sk)
                                                                     Filter: (p_channel_tv = 'N'::bpchar)
                                                         ->  Index Scan using store_returns_pkey on store_returns  (cost=0.42..0.45 rows=1 width=20)
                                                               Index Cond: ((sr_item_sk = store_sales.ss_item_sk) AND (sr_ticket_number = store_sales.ss_ticket_number))
                     ->  Subquery Scan on csr  (cost=48133.65..48139.30 rows=36 width=160)
                           ->  Finalize GroupAggregate  (cost=48133.65..48138.76 rows=36 width=113)
                                 Group Key: catalog_page.cp_catalog_page_id
                                 ->  Gather Merge  (cost=48133.65..48137.60 rows=30 width=113)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=47133.63..47134.11 rows=15 width=113)
                                             Group Key: catalog_page.cp_catalog_page_id
                                             ->  Sort  (cost=47133.63..47133.66 rows=15 width=41)
                                                   Sort Key: catalog_page.cp_catalog_page_id
                                                   ->  Nested Loop  (cost=2050.93..47133.33 rows=15 width=41)
                                                         ->  Nested Loop  (cost=2050.78..47130.82 rows=15 width=45)
                                                               ->  Nested Loop Left Join  (cost=2050.50..47126.27 rows=15 width=32)
                                                                     ->  Nested Loop  (cost=2050.08..47119.53 rows=15 width=28)
                                                                           ->  Parallel Hash Join  (cost=2049.79..47038.03 rows=262 width=28)
                                                                                 Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                                                 ->  Parallel Seq Scan on catalog_sales  (cost=0.00..43411.46 rows=600646 width=32)
                                                                                 ->  Parallel Hash  (cost=2049.55..2049.55 rows=19 width=4)
                                                                                       ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2049.55 rows=19 width=4)
                                                                                             Filter: ((d_date >= '2002-08-14'::date) AND (d_date <= '2002-09-13'::date))
                                                                           ->  Index Scan using item_pkey on item item_1  (cost=0.29..0.31 rows=1 width=4)
                                                                                 Index Cond: (i_item_sk = catalog_sales.cs_item_sk)
                                                                                 Filter: (i_current_price > '50'::numeric)
                                                                     ->  Index Scan using catalog_returns_pkey on catalog_returns  (cost=0.42..0.45 rows=1 width=20)
                                                                           Index Cond: ((cr_item_sk = catalog_sales.cs_item_sk) AND (cr_order_number = catalog_sales.cs_order_number))
                                                               ->  Index Scan using catalog_page_pkey on catalog_page  (cost=0.29..0.30 rows=1 width=21)
                                                                     Index Cond: (cp_catalog_page_sk = catalog_sales.cs_catalog_page_sk)
                                                         ->  Index Scan using promotion_pkey on promotion promotion_1  (cost=0.15..0.17 rows=1 width=4)
                                                               Index Cond: (p_promo_sk = catalog_sales.cs_promo_sk)
                                                               Filter: (p_channel_tv = 'N'::bpchar)
                     ->  Subquery Scan on wsr  (cost=25649.64..25650.39 rows=15 width=160)
                           ->  GroupAggregate  (cost=25649.64..25650.17 rows=15 width=113)
                                 Group Key: web_site.web_site_id
                                 ->  Sort  (cost=25649.64..25649.68 rows=18 width=41)
                                       Sort Key: web_site.web_site_id
                                       ->  Gather  (cost=3050.65..25649.26 rows=18 width=41)
                                             Workers Planned: 2
                                             ->  Nested Loop  (cost=2050.65..24647.46 rows=8 width=41)
                                                   ->  Nested Loop  (cost=2050.51..24646.12 rows=8 width=45)
                                                         ->  Nested Loop Left Join  (cost=2050.37..24644.88 rows=8 width=32)
                                                               ->  Nested Loop  (cost=2050.08..24642.31 rows=8 width=28)
                                                                     ->  Parallel Hash Join  (cost=2049.79..24601.09 rows=131 width=28)
                                                                           Hash Cond: (web_sales.ws_sold_date_sk = date_dim_2.d_date_sk)
                                                                           ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=32)
                                                                           ->  Parallel Hash  (cost=2049.55..2049.55 rows=19 width=4)
                                                                                 ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2049.55 rows=19 width=4)
                                                                                       Filter: ((d_date >= '2002-08-14'::date) AND (d_date <= '2002-09-13'::date))
                                                                     ->  Index Scan using item_pkey on item item_2  (cost=0.29..0.31 rows=1 width=4)
                                                                           Index Cond: (i_item_sk = web_sales.ws_item_sk)
                                                                           Filter: (i_current_price > '50'::numeric)
                                                               ->  Index Scan using web_returns_pkey on web_returns  (cost=0.29..0.32 rows=1 width=20)
                                                                     Index Cond: ((wr_item_sk = web_sales.ws_item_sk) AND (wr_order_number = web_sales.ws_order_number))
                                                         ->  Index Scan using web_site_pkey on web_site  (cost=0.14..0.16 rows=1 width=21)
                                                               Index Cond: (web_site_sk = web_sales.ws_web_site_sk)
                                                   ->  Index Scan using promotion_pkey on promotion promotion_2  (cost=0.15..0.17 rows=1 width=4)
                                                         Index Cond: (p_promo_sk = web_sales.ws_promo_sk)
                                                         Filter: (p_channel_tv = 'N'::bpchar)
 JIT:
   Functions: 125
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(97 rows)

