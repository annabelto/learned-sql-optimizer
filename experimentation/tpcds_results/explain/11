                                                                                                                                                                  QUERY PLAN                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1433639.18..1433639.18 rows=1 width=480)
   CTE year_total
     ->  Append  (cost=420091.74..1082744.67 rows=3341575 width=255)
           ->  Finalize GroupAggregate  (cost=420091.74..803510.73 rows=2622791 width=255)
                 Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year
                 ->  Gather Merge  (cost=420091.74..716084.34 rows=2185660 width=223)
                       Workers Planned: 2
                       ->  Partial GroupAggregate  (cost=419091.72..462804.92 rows=1092830 width=223)
                             Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year
                             ->  Sort  (cost=419091.72..421823.79 rows=1092830 width=201)
                                   Sort Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year
                                   ->  Parallel Hash Join  (cost=8015.36..92832.85 rows=1092830 width=201)
                                         Hash Cond: (store_sales.ss_customer_sk = customer.c_customer_sk)
                                         ->  Parallel Hash Join  (cost=2371.82..69221.24 rows=1144364 width=18)
                                               Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                               ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=18)
                                               ->  Parallel Hash  (cost=1834.70..1834.70 rows=42970 width=8)
                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..1834.70 rows=42970 width=8)
                                         ->  Parallel Hash  (cost=3356.24..3356.24 rows=58824 width=191)
                                               ->  Parallel Seq Scan on customer  (cost=0.00..3356.24 rows=58824 width=191)
           ->  Finalize GroupAggregate  (cost=124033.31..229110.32 rows=718784 width=255)
                 Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year
                 ->  Gather Merge  (cost=124033.31..205150.87 rows=598986 width=223)
                       Workers Planned: 2
                       ->  Partial GroupAggregate  (cost=123033.28..135013.00 rows=299493 width=223)
                             Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year
                             ->  Sort  (cost=123033.28..123782.01 rows=299493 width=204)
                                   Sort Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year
                                   ->  Parallel Hash Join  (cost=8015.36..36417.15 rows=299493 width=204)
                                         Hash Cond: (web_sales.ws_bill_customer_sk = customer_1.c_customer_sk)
                                         ->  Parallel Hash Join  (cost=2371.82..24923.13 rows=299603 width=21)
                                               Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                               ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=21)
                                               ->  Parallel Hash  (cost=1834.70..1834.70 rows=42970 width=8)
                                                     ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..1834.70 rows=42970 width=8)
                                         ->  Parallel Hash  (cost=3356.24..3356.24 rows=58824 width=191)
                                               ->  Parallel Seq Scan on customer customer_1  (cost=0.00..3356.24 rows=58824 width=191)
   ->  Sort  (cost=350894.51..350894.51 rows=1 width=480)
         Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_email_address
         ->  Nested Loop  (cost=0.00..350894.50 rows=1 width=480)
               Join Filter: ((t_s_secyear.customer_id = t_w_secyear.customer_id) AND (CASE WHEN (t_w_firstyear.year_total > '0'::numeric) THEN (t_w_secyear.year_total / t_w_firstyear.year_total) ELSE 0.0 END > CASE WHEN (t_s_firstyear.year_total > '0'::numeric) THEN (t_s_secyear.year_total / t_s_firstyear.year_total) ELSE 0.0 END))
               ->  Nested Loop  (cost=0.00..267350.08 rows=2 width=712)
                     Join Filter: (t_s_firstyear.customer_id = t_s_secyear.customer_id)
                     ->  Nested Loop  (cost=0.00..183803.99 rows=4 width=200)
                           Join Filter: (t_s_firstyear.customer_id = t_w_firstyear.customer_id)
                           ->  CTE Scan on year_total t_s_firstyear  (cost=0.00..91893.31 rows=28 width=100)
                                 Filter: ((year_total > '0'::numeric) AND (sale_type = 's'::text) AND (dyear = 1998))
                           ->  CTE Scan on year_total t_w_firstyear  (cost=0.00..91893.31 rows=28 width=100)
                                 Filter: ((year_total > '0'::numeric) AND (sale_type = 'w'::text) AND (dyear = 1998))
                     ->  CTE Scan on year_total t_s_secyear  (cost=0.00..83539.38 rows=84 width=512)
                           Filter: ((sale_type = 's'::text) AND (dyear = 1999))
               ->  CTE Scan on year_total t_w_secyear  (cost=0.00..83539.38 rows=84 width=100)
                     Filter: ((sale_type = 'w'::text) AND (dyear = 1999))
 JIT:
   Functions: 76
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(56 rows)

