

 Limit  (cost=70386.88..70386.90 rows=8 width=246)
   ->  Sort  (cost=70386.88..70386.90 rows=8 width=246)
         Sort Key: store.s_store_name, store.s_store_id, (sum(CASE WHEN (date_dim.d_day_name = 'Sunday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Monday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Tuesday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Wednesday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Thursday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Friday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END)), (sum(CASE WHEN (date_dim.d_day_name = 'Saturday'::bpchar) THEN store_sales.ss_sales_price ELSE NULL::numeric END))
         ->  Finalize GroupAggregate  (cost=70152.80..70386.76 rows=8 width=246)
               Group Key: store.s_store_name, store.s_store_id
               ->  Gather Merge  (cost=70152.80..70385.90 rows=16 width=246)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=69152.78..69384.03 rows=8 width=246)
                           Group Key: store.s_store_name, store.s_store_id
                           ->  Sort  (cost=69152.78..69166.37 rows=5436 width=38)
                                 Sort Key: store.s_store_name, store.s_store_id
                                 ->  Hash Join  (cost=1946.10..68815.52 rows=5436 width=38)
                                       Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                       ->  Parallel Hash Join  (cost=1944.80..68794.21 rows=5702 width=20)
                                             Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                             ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=14)
                                             ->  Parallel Hash  (cost=1942.12..1942.12 rows=214 width=14)
                                                   ->  Parallel Seq Scan on date_dim  (cost=0.00..1942.12 rows=214 width=14)
                                                         Filter: (d_year = 2000)
                                       ->  Hash  (cost=1.15..1.15 rows=12 width=26)
                                             ->  Seq Scan on store  (cost=0.00..1.15 rows=12 width=26)
                                                   Filter: (s_gmt_offset = '-5'::numeric)
(22 rows)

