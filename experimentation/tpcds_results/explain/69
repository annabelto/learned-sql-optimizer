                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80430.63..106557.98 rows=100 width=64)
   ->  GroupAggregate  (cost=80430.63..172921.47 rows=354 width=64)
         Group Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
         ->  Nested Loop Anti Join  (cost=80430.63..172912.62 rows=354 width=40)
               Join Filter: (c.c_customer_sk = catalog_sales.cs_ship_customer_sk)
               ->  Nested Loop Anti Join  (cost=77746.16..105185.19 rows=360 width=44)
                     Join Filter: (c.c_customer_sk = web_sales.ws_bill_customer_sk)
                     ->  Gather Merge  (cost=74588.53..74629.79 rows=362 width=44)
                           Workers Planned: 1
                           ->  Sort  (cost=73588.52..73589.05 rows=213 width=44)
                                 Sort Key: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating
                                 ->  Nested Loop  (cost=69025.18..73580.28 rows=213 width=44)
                                       ->  Nested Loop  (cost=69024.75..73242.41 rows=221 width=8)
                                             ->  Parallel Hash Semi Join  (cost=69024.46..72565.43 rows=1879 width=12)
                                                   Hash Cond: (c.c_customer_sk = store_sales.ss_customer_sk)
                                                   ->  Parallel Seq Scan on customer c  (cost=0.00..3356.24 rows=58824 width=12)
                                                   ->  Parallel Hash  (cost=69007.04..69007.04 rows=1394 width=4)
                                                         ->  Parallel Hash Join  (cost=2157.62..69007.04 rows=1394 width=4)
                                                               Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                               ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=8)
                                                               ->  Parallel Hash  (cost=2156.97..2156.97 rows=52 width=4)
                                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..2156.97 rows=52 width=4)
                                                                           Filter: ((d_moy >= 1) AND (d_moy <= 3) AND (d_year = 2002))
                                             ->  Index Scan using customer_address_pkey on customer_address ca  (cost=0.29..0.36 rows=1 width=4)
                                                   Index Cond: (ca_address_sk = c.c_current_addr_sk)
                                                   Filter: (ca_state = ANY ('{IL,TX,ME}'::bpchar[]))
                                       ->  Index Scan using customer_demographics_pkey on customer_demographics  (cost=0.43..1.53 rows=1 width=44)
                                             Index Cond: (cd_demo_sk = c.c_current_cdemo_sk)
                     ->  Materialize  (cost=3157.62..25800.91 rows=876 width=4)
                           ->  Gather  (cost=3157.62..25796.53 rows=876 width=4)
                                 Workers Planned: 2
                                 ->  Parallel Hash Join  (cost=2157.62..24708.93 rows=365 width=4)
                                       Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                       ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=8)
                                       ->  Parallel Hash  (cost=2156.97..2156.97 rows=52 width=4)
                                             ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2156.97 rows=52 width=4)
                                                   Filter: ((d_moy >= 1) AND (d_moy <= 3) AND (d_year = 2002))
               ->  Materialize  (cost=2684.47..58298.00 rows=1747 width=4)
                     ->  Hash Join  (cost=2684.47..58289.26 rows=1747 width=4)
                           Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_2.d_date_sk)
                           ->  Seq Scan on catalog_sales  (cost=0.00..51820.50 rows=1441550 width=8)
                           ->  Hash  (cost=2683.36..2683.36 rows=89 width=4)
                                 ->  Seq Scan on date_dim date_dim_2  (cost=0.00..2683.36 rows=89 width=4)
                                       Filter: ((d_moy >= 1) AND (d_moy <= 3) AND (d_year = 2002))
 JIT:
   Functions: 63
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(47 rows)

