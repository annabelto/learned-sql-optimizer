                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Seq Scan on reason  (cost=1069092.86..1069094.31 rows=1 width=160)
   Filter: (r_reason_sk = 1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=71272.98..71272.99 rows=1 width=8)
           ->  Gather  (cost=71272.77..71272.98 rows=2 width=8)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70272.77..70272.78 rows=1 width=8)
                       ->  Parallel Seq Scan on store_sales  (cost=0.00..69699.84 rows=229169 width=0)
                             Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
   InitPlan 2 (returns $3)
     ->  Finalize Aggregate  (cost=71272.99..71273.00 rows=1 width=32)
           ->  Gather  (cost=71272.77..71272.98 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70272.77..70272.78 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..69699.84 rows=229169 width=6)
                             Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
   InitPlan 3 (returns $5)
     ->  Finalize Aggregate  (cost=71272.99..71273.00 rows=1 width=32)
           ->  Gather  (cost=71272.77..71272.98 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70272.77..70272.78 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_2  (cost=0.00..69699.84 rows=229169 width=6)
                             Filter: ((ss_quantity >= 1) AND (ss_quantity <= 20))
   InitPlan 4 (returns $7)
     ->  Finalize Aggregate  (cost=71265.28..71265.29 rows=1 width=8)
           ->  Gather  (cost=71265.06..71265.27 rows=2 width=8)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70265.06..70265.07 rows=1 width=8)
                       ->  Parallel Seq Scan on store_sales store_sales_3  (cost=0.00..69699.84 rows=226088 width=0)
                             Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
   InitPlan 5 (returns $9)
     ->  Finalize Aggregate  (cost=71265.29..71265.30 rows=1 width=32)
           ->  Gather  (cost=71265.07..71265.28 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70265.07..70265.08 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_4  (cost=0.00..69699.84 rows=226088 width=6)
                             Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
   InitPlan 6 (returns $11)
     ->  Finalize Aggregate  (cost=71265.29..71265.30 rows=1 width=32)
           ->  Gather  (cost=71265.07..71265.28 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70265.07..70265.08 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_5  (cost=0.00..69699.84 rows=226088 width=6)
                             Filter: ((ss_quantity >= 21) AND (ss_quantity <= 40))
   InitPlan 7 (returns $13)
     ->  Finalize Aggregate  (cost=71275.98..71275.99 rows=1 width=8)
           ->  Gather  (cost=71275.77..71275.98 rows=2 width=8)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70275.77..70275.78 rows=1 width=8)
                       ->  Parallel Seq Scan on store_sales store_sales_6  (cost=0.00..69699.84 rows=230369 width=0)
                             Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
   InitPlan 8 (returns $15)
     ->  Finalize Aggregate  (cost=71275.99..71276.00 rows=1 width=32)
           ->  Gather  (cost=71275.77..71275.98 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70275.77..70275.78 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_7  (cost=0.00..69699.84 rows=230369 width=6)
                             Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
   InitPlan 9 (returns $17)
     ->  Finalize Aggregate  (cost=71275.99..71276.00 rows=1 width=32)
           ->  Gather  (cost=71275.77..71275.98 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70275.77..70275.78 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_8  (cost=0.00..69699.84 rows=230369 width=6)
                             Filter: ((ss_quantity >= 41) AND (ss_quantity <= 60))
   InitPlan 10 (returns $19)
     ->  Finalize Aggregate  (cost=71276.68..71276.69 rows=1 width=8)
           ->  Gather  (cost=71276.47..71276.68 rows=2 width=8)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70276.47..70276.48 rows=1 width=8)
                       ->  Parallel Seq Scan on store_sales store_sales_9  (cost=0.00..69699.84 rows=230649 width=0)
                             Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
   InitPlan 11 (returns $21)
     ->  Finalize Aggregate  (cost=71276.69..71276.70 rows=1 width=32)
           ->  Gather  (cost=71276.47..71276.68 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70276.47..70276.48 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_10  (cost=0.00..69699.84 rows=230649 width=6)
                             Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
   InitPlan 12 (returns $23)
     ->  Finalize Aggregate  (cost=71276.69..71276.70 rows=1 width=32)
           ->  Gather  (cost=71276.47..71276.68 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70276.47..70276.48 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_11  (cost=0.00..69699.84 rows=230649 width=6)
                             Filter: ((ss_quantity >= 61) AND (ss_quantity <= 80))
   InitPlan 13 (returns $25)
     ->  Finalize Aggregate  (cost=71273.28..71273.29 rows=1 width=8)
           ->  Gather  (cost=71273.07..71273.28 rows=2 width=8)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70273.07..70273.08 rows=1 width=8)
                       ->  Parallel Seq Scan on store_sales store_sales_12  (cost=0.00..69699.84 rows=229289 width=0)
                             Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
   InitPlan 14 (returns $27)
     ->  Finalize Aggregate  (cost=71273.29..71273.30 rows=1 width=32)
           ->  Gather  (cost=71273.07..71273.28 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70273.07..70273.08 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_13  (cost=0.00..69699.84 rows=229289 width=6)
                             Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
   InitPlan 15 (returns $29)
     ->  Finalize Aggregate  (cost=71273.29..71273.30 rows=1 width=32)
           ->  Gather  (cost=71273.07..71273.28 rows=2 width=32)
                 Workers Planned: 2
                 ->  Partial Aggregate  (cost=70273.07..70273.08 rows=1 width=32)
                       ->  Parallel Seq Scan on store_sales store_sales_14  (cost=0.00..69699.84 rows=229289 width=6)
                             Filter: ((ss_quantity >= 81) AND (ss_quantity <= 100))
 JIT:
   Functions: 103
   Options: Inlining true, Optimization true, Expressions true, Deforming true
(110 rows)

