

 Limit  (cost=129539.44..129622.77 rows=63 width=51)
   ->  Finalize GroupAggregate  (cost=129539.44..129622.14 rows=63 width=51)
         Group Key: warehouse.w_warehouse_name, item.i_item_id
         Filter: (((CASE WHEN (sum(CASE WHEN (date_dim.d_date < '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END) > 0) THEN (sum(CASE WHEN (date_dim.d_date >= '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END) / sum(CASE WHEN (date_dim.d_date < '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END)) ELSE NULL::bigint END)::numeric >= 0.66666666666666666667) AND ((CASE WHEN (sum(CASE WHEN (date_dim.d_date < '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END) > 0) THEN (sum(CASE WHEN (date_dim.d_date >= '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END) / sum(CASE WHEN (date_dim.d_date < '1999-06-22'::date) THEN inventory.inv_quantity_on_hand ELSE 0 END)) ELSE NULL::bigint END)::numeric <= 1.5000000000000000))
         ->  Gather Merge  (cost=129539.44..129600.41 rows=472 width=51)
               Workers Planned: 2
               ->  Partial GroupAggregate  (cost=128539.42..128545.91 rows=236 width=51)
                     Group Key: warehouse.w_warehouse_name, item.i_item_id
                     ->  Sort  (cost=128539.42..128540.01 rows=236 width=43)
                           Sort Key: warehouse.w_warehouse_name, item.i_item_id
                           ->  Hash Join  (cost=2051.38..128530.12 rows=236 width=43)
                                 Hash Cond: (inventory.inv_warehouse_sk = warehouse.w_warehouse_sk)
                                 ->  Nested Loop  (cost=2050.26..128527.86 rows=236 width=29)
                                       ->  Parallel Hash Join  (cost=2049.98..127321.81 rows=3885 width=16)
                                             Hash Cond: (inventory.inv_date_sk = date_dim.d_date_sk)
                                             ->  Parallel Seq Scan on inventory  (cost=0.00..112424.90 rows=4893790 width=16)
                                             ->  Parallel Hash  (cost=2049.55..2049.55 rows=34 width=8)
                                                   ->  Parallel Seq Scan on date_dim  (cost=0.00..2049.55 rows=34 width=8)
                                                         Filter: ((d_date >= '1999-05-23'::date) AND (d_date <= '1999-07-22'::date))
                                       ->  Index Scan using item_pkey on item  (cost=0.29..0.31 rows=1 width=21)
                                             Index Cond: (i_item_sk = inventory.inv_item_sk)
                                             Filter: ((i_current_price >= 0.99) AND (i_current_price <= 1.49))
                                 ->  Hash  (cost=1.05..1.05 rows=5 width=22)
                                       ->  Seq Scan on warehouse  (cost=0.00..1.05 rows=5 width=22)
 JIT:
   Functions: 37
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(27 rows)

