                                                                                                                                                                            QUERY PLAN                                                                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108965.74..108965.74 rows=1 width=276)
   CTE year_total
     ->  Append  (cost=74104.81..105473.69 rows=33257 width=137)
           ->  Finalize GroupAggregate  (cost=74104.81..77420.37 rows=26103 width=137)
                 Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, date_dim.d_year
                 ->  Gather Merge  (cost=74104.81..76887.44 rows=21752 width=105)
                       Workers Planned: 2
                       ->  Partial GroupAggregate  (cost=73104.79..73376.69 rows=10876 width=105)
                             Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, date_dim.d_year
                             ->  Sort  (cost=73104.79..73131.98 rows=10876 width=79)
                                   Sort Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, date_dim.d_year
                                   ->  Nested Loop  (cost=1947.77..72375.62 rows=10876 width=79)
                                         ->  Parallel Hash Join  (cost=1947.47..68796.89 rows=11389 width=14)
                                               Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                               ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=14)
                                               ->  Parallel Hash  (cost=1942.12..1942.12 rows=428 width=8)
                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..1942.12 rows=428 width=8)
                                                           Filter: (d_year = ANY ('{1999,2000}'::integer[]))
                                         ->  Index Scan using customer_pkey on customer  (cost=0.29..0.31 rows=1 width=73)
                                               Index Cond: (c_customer_sk = store_sales.ss_customer_sk)
           ->  Finalize GroupAggregate  (cost=26645.72..27554.47 rows=7154 width=137)
                 Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, date_dim_1.d_year
                 ->  Gather Merge  (cost=26645.72..27408.41 rows=5962 width=105)
                       Workers Planned: 2
                       ->  Partial GroupAggregate  (cost=25645.70..25720.22 rows=2981 width=105)
                             Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, date_dim_1.d_year
                             ->  Sort  (cost=25645.70..25653.15 rows=2981 width=79)
                                   Sort Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, date_dim_1.d_year
                                   ->  Nested Loop  (cost=1947.77..25473.67 rows=2981 width=79)
                                         ->  Parallel Hash Join  (cost=1947.47..24498.78 rows=2982 width=14)
                                               Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                               ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=14)
                                               ->  Parallel Hash  (cost=1942.12..1942.12 rows=428 width=8)
                                                     ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..1942.12 rows=428 width=8)
                                                           Filter: (d_year = ANY ('{1999,2000}'::integer[]))
                                         ->  Index Scan using customer_pkey on customer customer_1  (cost=0.29..0.33 rows=1 width=73)
                                               Index Cond: (c_customer_sk = web_sales.ws_bill_customer_sk)
   ->  Sort  (cost=3492.05..3492.05 rows=1 width=276)
         Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_last_name, t_s_secyear.customer_first_name
         ->  Nested Loop  (cost=0.00..3492.04 rows=1 width=276)
               Join Filter: ((t_s_secyear.customer_id = t_w_secyear.customer_id) AND (CASE WHEN (t_w_firstyear.year_total > '0'::numeric) THEN (t_w_secyear.year_total / t_w_firstyear.year_total) ELSE NULL::numeric END > CASE WHEN (t_s_firstyear.year_total > '0'::numeric) THEN (t_s_secyear.year_total / t_s_firstyear.year_total) ELSE NULL::numeric END))
               ->  Nested Loop  (cost=0.00..2660.59 rows=1 width=508)
                     Join Filter: (t_s_secyear.customer_id = t_w_firstyear.customer_id)
                     ->  Nested Loop  (cost=0.00..1746.01 rows=1 width=408)
                           Join Filter: (t_s_firstyear.customer_id = t_s_secyear.customer_id)
                           ->  CTE Scan on year_total t_s_firstyear  (cost=0.00..914.57 rows=1 width=100)
                                 Filter: ((year_total > '0'::numeric) AND (sale_type = 's'::text) AND (year = 1999))
                           ->  CTE Scan on year_total t_s_secyear  (cost=0.00..831.43 rows=1 width=308)
                                 Filter: ((sale_type = 's'::text) AND (year = 2000))
                     ->  CTE Scan on year_total t_w_firstyear  (cost=0.00..914.57 rows=1 width=100)
                           Filter: ((year_total > '0'::numeric) AND (sale_type = 'w'::text) AND (year = 1999))
               ->  CTE Scan on year_total t_w_secyear  (cost=0.00..831.43 rows=1 width=100)
                     Filter: ((sale_type = 'w'::text) AND (year = 2000))
 JIT:
   Functions: 72
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(56 rows)

