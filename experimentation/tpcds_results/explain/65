                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=144530.55..144530.80 rows=100 width=202)
   ->  Sort  (cost=144530.55..144531.22 rows=271 width=202)
         Sort Key: store.s_store_name, item.i_item_desc
         ->  Nested Loop  (cost=140509.81..144520.19 rows=271 width=202)
               ->  Merge Join  (cost=140509.52..144335.15 rows=271 width=41)
                     Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
                     Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
                     ->  Finalize GroupAggregate  (cost=70254.09..71969.55 rows=13573 width=40)
                           Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
                           ->  Gather Merge  (cost=70254.09..71686.79 rows=11310 width=40)
                                 Workers Planned: 2
                                 ->  Partial GroupAggregate  (cost=69254.07..69381.31 rows=5655 width=40)
                                       Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
                                       ->  Sort  (cost=69254.07..69268.21 rows=5655 width=14)
                                             Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
                                             ->  Parallel Hash Join  (cost=2052.20..68901.61 rows=5655 width=14)
                                                   Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                   ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=18)
                                                   ->  Parallel Hash  (cost=2049.55..2049.55 rows=212 width=4)
                                                         ->  Parallel Seq Scan on date_dim  (cost=0.00..2049.55 rows=212 width=4)
                                                               Filter: ((d_month_seq >= 1176) AND (d_month_seq <= 1187))
                     ->  Materialize  (cost=70255.43..72179.69 rows=12 width=45)
                           ->  Merge Join  (cost=70255.43..72179.66 rows=12 width=45)
                                 Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
                                 ->  Sort  (cost=1.34..1.37 rows=12 width=9)
                                       Sort Key: store.s_store_sk
                                       ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
                                 ->  GroupAggregate  (cost=70254.09..72175.64 rows=200 width=36)
                                       Group Key: store_sales_1.ss_store_sk
                                       ->  Finalize GroupAggregate  (cost=70254.09..71969.55 rows=13573 width=40)
                                             Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
                                             ->  Gather Merge  (cost=70254.09..71686.79 rows=11310 width=40)
                                                   Workers Planned: 2
                                                   ->  Partial GroupAggregate  (cost=69254.07..69381.31 rows=5655 width=40)
                                                         Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
                                                         ->  Sort  (cost=69254.07..69268.21 rows=5655 width=14)
                                                               Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
                                                               ->  Parallel Hash Join  (cost=2052.20..68901.61 rows=5655 width=14)
                                                                     Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
                                                                     ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63698.56 rows=1200256 width=18)
                                                                     ->  Parallel Hash  (cost=2049.55..2049.55 rows=212 width=4)
                                                                           ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2049.55 rows=212 width=4)
                                                                                 Filter: ((d_month_seq >= 1176) AND (d_month_seq <= 1187))
               ->  Index Scan using item_pkey on item  (cost=0.29..0.68 rows=1 width=169)
                     Index Cond: (i_item_sk = store_sales.ss_item_sk)
 JIT:
   Functions: 62
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(48 rows)

