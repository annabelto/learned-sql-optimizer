                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=198006.15..198009.11 rows=100 width=160)
   ->  GroupAggregate  (cost=198006.15..198018.04 rows=401 width=160)
         Group Key: ('store channel'::text), (('store'::text || (ssr.s_store_id)::text))
         Group Key: ('store channel'::text)
         Group Key: ()
         ->  Sort  (cost=198006.15..198006.96 rows=325 width=160)
               Sort Key: ('store channel'::text), (('store'::text || (ssr.s_store_id)::text))
               ->  Append  (cost=82805.06..197992.59 rows=325 width=160)
                     ->  Subquery Scan on ssr  (cost=82805.06..82807.29 rows=6 width=160)
                           ->  Finalize GroupAggregate  (cost=82805.06..82807.18 rows=6 width=145)
                                 Group Key: store.s_store_id
                                 ->  Gather Merge  (cost=82805.06..82806.79 rows=12 width=145)
                                       Workers Planned: 2
                                       ->  Partial GroupAggregate  (cost=81805.04..81805.38 rows=6 width=145)
                                             Group Key: store.s_store_id
                                             ->  Sort  (cost=81805.04..81805.08 rows=15 width=57)
                                                   Sort Key: store.s_store_id
                                                   ->  Hash Join  (cost=2050.92..81804.74 rows=15 width=57)
                                                         Hash Cond: (store_sales.ss_store_sk = store.s_store_sk)
                                                         ->  Parallel Hash Join  (cost=2049.65..81802.80 rows=253 width=44)
                                                               Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                                               ->  Parallel Append  (cost=0.00..76287.81 rows=1320054 width=48)
                                                                     ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.56 rows=1200256 width=48)
                                                                     ->  Parallel Seq Scan on store_returns  (cost=0.00..5988.98 rows=119798 width=48)
                                                               ->  Parallel Hash  (cost=2049.55..2049.55 rows=8 width=4)
                                                                     ->  Parallel Seq Scan on date_dim  (cost=0.00..2049.55 rows=8 width=4)
                                                                           Filter: ((d_date >= '2000-08-19'::date) AND (d_date <= '2000-09-02'::date))
                                                         ->  Hash  (cost=1.12..1.12 rows=12 width=21)
                                                               ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=21)
                     ->  Subquery Scan on csr  (cost=55266.27..55316.87 rows=304 width=160)
                           ->  GroupAggregate  (cost=55266.27..55311.55 rows=304 width=145)
                                 Group Key: catalog_page.cp_catalog_page_id
                                 ->  Gather Merge  (cost=55266.27..55301.67 rows=304 width=57)
                                       Workers Planned: 2
                                       ->  Sort  (cost=54266.24..54266.56 rows=127 width=57)
                                             Sort Key: catalog_page.cp_catalog_page_id
                                             ->  Nested Loop  (cost=2049.93..54261.81 rows=127 width=57)
                                                   ->  Parallel Hash Join  (cost=2049.65..54223.30 rows=127 width=44)
                                                         Hash Cond: (catalog_sales.cs_sold_date_sk = date_dim_1.d_date_sk)
                                                         ->  Parallel Append  (cost=0.00..50439.28 rows=660674 width=48)
                                                               ->  Parallel Seq Scan on catalog_sales  (cost=0.00..43411.46 rows=600646 width=48)
                                                               ->  Parallel Seq Scan on catalog_returns  (cost=0.00..3724.45 rows=84745 width=48)
                                                         ->  Parallel Hash  (cost=2049.55..2049.55 rows=8 width=4)
                                                               ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..2049.55 rows=8 width=4)
                                                                     Filter: ((d_date >= '2000-08-19'::date) AND (d_date <= '2000-09-02'::date))
                                                   ->  Index Scan using catalog_page_pkey on catalog_page  (cost=0.29..0.30 rows=1 width=21)
                                                         Index Cond: (cp_catalog_page_sk = catalog_sales.cs_catalog_page_sk)
                     ->  Subquery Scan on wsr  (cost=59863.27..59866.80 rows=15 width=160)
                           ->  GroupAggregate  (cost=59863.27..59866.54 rows=15 width=145)
                                 Group Key: web_site.web_site_id
                                 ->  Gather Merge  (cost=59863.27..59865.95 rows=23 width=57)
                                       Workers Planned: 2
                                       ->  Sort  (cost=58863.25..58863.27 rows=10 width=57)
                                             Sort Key: web_site.web_site_id
                                             ->  Hash Join  (cost=2052.33..58863.08 rows=10 width=57)
                                                   Hash Cond: ("*SELECT* 2".wsr_web_site_sk = web_site.web_site_sk)
                                                   ->  Parallel Hash Join  (cost=2049.65..58860.24 rows=63 width=44)
                                                         Hash Cond: ("*SELECT* 2".date_sk = date_dim_2.d_date_sk)
                                                         ->  Parallel Append  (cost=0.00..55890.28 rows=350575 width=48)
                                                               ->  Subquery Scan on "*SELECT* 2"  (cost=27724.58..32372.97 rows=71763 width=48)
                                                                     ->  Parallel Hash Left Join  (cost=27724.58..31655.34 rows=42214 width=48)
                                                                           Hash Cond: ((web_returns.wr_item_sk = web_sales_1.ws_item_sk) AND (web_returns.wr_order_number = web_sales_1.ws_order_number))
                                                                           ->  Parallel Seq Scan on web_returns  (cost=0.00..1749.14 rows=42214 width=24)
                                                                           ->  Parallel Hash  (cost=21764.43..21764.43 rows=299743 width=12)
                                                                                 ->  Parallel Seq Scan on web_sales web_sales_1  (cost=0.00..21764.43 rows=299743 width=12)
                                                               ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=48)
                                                         ->  Parallel Hash  (cost=2049.55..2049.55 rows=8 width=4)
                                                               ->  Parallel Seq Scan on date_dim date_dim_2  (cost=0.00..2049.55 rows=8 width=4)
                                                                     Filter: ((d_date >= '2000-08-19'::date) AND (d_date <= '2000-09-02'::date))
                                                   ->  Hash  (cost=2.30..2.30 rows=30 width=21)
                                                         ->  Seq Scan on web_site  (cost=0.00..2.30 rows=30 width=21)
 JIT:
   Functions: 94
   Options: Inlining false, Optimization false, Expressions true, Deforming true
(74 rows)

